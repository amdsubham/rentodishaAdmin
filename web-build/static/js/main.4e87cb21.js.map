{"version":3,"file":"static/js/main.4e87cb21.js","mappings":"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","sources":["context/UserContext.js","api.js","config.js","screens/LoginScreen.js","screens/ManageOrdersScreen.js","screens/ManageProductScreen.js","screens/RegisterScreen.js","screens/UserDetailsScreen.js","screens/MenuScreen.js","screens/HomeScreen.js","screens/ManageUserScreen.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst UserContext = createContext({\n    userId: null,\n    login: () => { },\n    logout: () => { },\n});\n\nexport const UserProvider = ({ children }) => {\n    const [userId, setUserId] = useState(null);\n\n    useEffect(() => {\n        // Load userId from AsyncStorage on component mount\n        loadUserIdFromStorage();\n    }, []);\n\n    const loadUserIdFromStorage = async () => {\n        try {\n            const userId = await AsyncStorage.getItem('userId');\n            setUserId(userId);\n        } catch (error) {\n            console.error('Error loading userId from AsyncStorage:', error);\n        }\n    };\n\n    const login = async (userId) => {\n        try {\n            // Save userId to AsyncStorage on login\n            await AsyncStorage.setItem('userId', userId);\n            setUserId(userId);\n        } catch (error) {\n            console.error('Error saving userId to AsyncStorage:', error);\n        }\n    };\n\n    const logout = async () => {\n        try {\n            // Remove userId from AsyncStorage on logout\n            await AsyncStorage.removeItem('userId');\n            setUserId(null);\n        } catch (error) {\n            console.error('Error removing userId from AsyncStorage:', error);\n        }\n    };\n\n    return (\n        <UserContext.Provider value={{ userId, login, logout }}>\n            {children}\n        </UserContext.Provider>\n    );\n};\n\nexport default UserContext;\n","// src/api.js\nimport axios from 'axios';\nimport API_BASE_URL from './config';\n\nconst api = axios.create({\n    baseURL: API_BASE_URL,\n});\n\nexport default api;\n","const API_BASE_URL = 'https://odicult.fruitnasta.com/api';\n\nexport default API_BASE_URL;\n","import React, { useState, useContext } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, ActivityIndicator } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport UserContext from '../context/UserContext';\nimport api from '../api';\n\nconst LoginScreen = ({ navigation }) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const { login } = useContext(UserContext);\n\n    const handleLogin = async () => {\n        try {\n            setIsLoading(true);\n            // Make an API request to login\n            await api.post('/admin/login', { email, password }).then((response) => {\n                if (response) {\n                    // Save the token in AsyncStorage or any other state management solution\n                    const token = response.data.token;\n                    login(token);\n                }\n            });\n        } catch (error) {\n            console.error('Error logging in:', error);\n            alert('Failed to login. Please check your credentials.');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleNavigateToRegister = () => {\n        navigation.navigate('Register');\n    };\n\n    return (\n        <View style={styles.container}>\n            <MaterialCommunityIcons name=\"account-circle\" size={100} color=\"#007BFF\" />\n            <Text style={styles.heading}>Admin Login</Text>\n            <TextInput\n                style={styles.input}\n                placeholder=\"Email\"\n                value={email}\n                onChangeText={setEmail}\n                autoCapitalize=\"none\"\n            />\n            <TextInput\n                style={styles.input}\n                placeholder=\"Password\"\n                value={password}\n                onChangeText={setPassword}\n                secureTextEntry\n            />\n            <TouchableOpacity style={styles.loginButton} onPress={handleLogin}>\n                {isLoading ? (\n                    <ActivityIndicator size=\"small\" color=\"#fff\" />\n                ) : (\n                    <Text style={styles.loginButtonText}>Login</Text>\n                )}\n            </TouchableOpacity>\n            <TouchableOpacity style={styles.registerLink} onPress={handleNavigateToRegister}>\n                <Text style={styles.registerLinkText}>Don't have an account? Register here.</Text>\n            </TouchableOpacity>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: 20,\n        backgroundColor: '#f9f9f9',\n    },\n    heading: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        marginBottom: 20,\n        color: '#007BFF',\n    },\n    input: {\n        width: '100%',\n        height: 40,\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 8,\n        paddingHorizontal: 10,\n        marginBottom: 20,\n    },\n    loginButton: {\n        backgroundColor: '#007BFF',\n        paddingVertical: 12,\n        paddingHorizontal: 24,\n        borderRadius: 8,\n    },\n    loginButtonText: {\n        color: '#fff',\n        fontSize: 18,\n        fontWeight: 'bold',\n        textAlign: 'center',\n    },\n    registerLink: {\n        marginTop: 10,\n    },\n    registerLinkText: {\n        color: '#007BFF',\n        fontSize: 16,\n        fontWeight: 'bold',\n    },\n});\n\nexport default LoginScreen;\n","import React, { useState, useEffect } from 'react';\nimport { View, Text, FlatList, StyleSheet, Alert, ActivityIndicator, RefreshControl } from 'react-native';\nimport { TextInput, Button, Card, Title, Modal, Portal, RadioButton } from 'react-native-paper';\nimport { Picker } from '@react-native-picker/picker';\nimport api from '../api';\n\nconst ManageOrdersScreen = () => {\n    const [orders, setOrders] = useState([]);\n    const [filteredOrders, setFilteredOrders] = useState([]);\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [editedOrder, setEditedOrder] = useState({});\n    const [searchQuery, setSearchQuery] = useState('');\n    const [statusFilter, setStatusFilter] = useState('All');\n    const [isLoading, setIsLoading] = useState(false);\n    const [isRefreshing, setIsRefreshing] = useState(false);\n\n    useEffect(() => {\n        fetchOrders();\n    }, []);\n\n    const fetchOrders = async () => {\n        setIsRefreshing(true);\n        try {\n            const response = await api.get('/orders/');\n            const result = response.data.reverse() || []\n            setOrders(result);\n            applyFilters(searchQuery, result, statusFilter);\n        } catch (error) {\n            console.error('Error fetching orders:', error);\n        } finally {\n            setIsRefreshing(false);\n            setIsLoading(false);\n        }\n    };\n\n    const applyFilters = (query, data, status) => {\n        let filteredData = data;\n\n        if (status !== 'All') {\n            filteredData = filteredData.filter((order) => order.status === status);\n        }\n\n        if (query.trim() !== '') {\n            filteredData = filteredData.filter((order) =>\n                order._id.toLowerCase().includes(query.toLowerCase())\n            );\n        }\n\n        setFilteredOrders(filteredData);\n    };\n\n    useEffect(() => {\n        applyFilters(searchQuery, orders, statusFilter);\n    }, [searchQuery, orders, statusFilter]);\n\n    const handleSearch = () => {\n        applyFilters(searchQuery, orders, statusFilter);\n    };\n\n    const handleClearSearch = () => {\n        setSearchQuery('');\n    };\n\n    const handleEditOrder = (order) => {\n        setIsModalVisible(true);\n        setEditedOrder(order);\n    };\n\n    const handleCancelEdit = () => {\n        setIsModalVisible(false);\n        setEditedOrder({});\n    };\n\n    const handleSaveEdit = async () => {\n        setIsLoading(true);\n        try {\n            await api.put(`/orders/${editedOrder._id}`, editedOrder);\n            setIsModalVisible(false);\n            fetchOrders();\n        } catch (error) {\n            console.error('Error updating order:', error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleDeleteOrder = async (_id) => {\n        try {\n            Alert.alert(\n                'Confirm Delete',\n                'Are you sure you want to delete this order?',\n                [\n                    { text: 'Cancel', style: 'cancel' },\n                    { text: 'Delete', style: 'destructive', onPress: () => deleteOrder(_id) },\n                ],\n            );\n        } catch (error) {\n            console.error('Error deleting order:', error);\n        }\n    };\n\n    const deleteOrder = async (_id) => {\n        try {\n            await api.delete(`/orders/${_id}`);\n            fetchOrders();\n        } catch (error) {\n            console.error('Error deleting order:', error);\n        }\n    };\n\n    const statusOptions = ['Processing', 'Order Confirmed', 'Shipped', 'Delivered'];\n\n    const renderOrderCard = ({ item }) => (\n        <Card style={styles.card}>\n            <Card.Content>\n                <Title>Order ID: {item._id}</Title>\n                <View style={styles.detailsContainer}>\n                    <View style={styles.detailRow}>\n                        <Text style={styles.detailLabel}>Customer:</Text>\n                        <Text style={styles.detailValue}>{item.name}</Text>\n                    </View>\n                    <View style={styles.detailRow}>\n                        <Text style={styles.detailLabel}>Total Price:</Text>\n                        <Text style={styles.detailValue}>₹{item.totalPrice.toFixed(2)}</Text>\n                    </View>\n                    <View style={styles.detailRow}>\n                        <Text style={styles.detailLabel}>Phone:</Text>\n                        <Text style={styles.detailValue}>{item.phone}</Text>\n                    </View>\n                    <View style={styles.detailRow}>\n                        <Text style={styles.detailLabel}>Status:</Text>\n                        <Text style={styles.detailValue}>{item.status}</Text>\n                    </View>\n                    <View style={styles.detailRow}>\n                        <Text style={styles.detailLabel}>Payment Mode:</Text>\n                        <Text style={styles.detailValue}>{item.paymentMode}</Text>\n                    </View>\n                </View>\n            </Card.Content>\n            <Card.Actions style={styles.cardActions}>\n                <Button onPress={() => handleEditOrder(item)} buttonColor=\"#007BFF\" textColor='white'>\n                    Edit\n                </Button>\n                <Button onPress={() => handleDeleteOrder(item._id)} buttonColor=\"red\">\n                    Delete\n                </Button>\n            </Card.Actions>\n        </Card>\n    );\n\n    const renderEditModal = () => (\n        <Modal visible={isModalVisible} onDismiss={handleCancelEdit}>\n            <Card style={styles.modalCard}>\n                <Card.Title title=\"Status\" />\n                <Card.Content style={styles.modalCardContent}>\n                    <RadioButton.Group\n                        onValueChange={(itemValue) => setEditedOrder({ ...editedOrder, status: itemValue })}\n                        value={editedOrder.status}\n                    >\n                        {statusOptions.map((option) => (\n                            <View style={styles.radioButtonContainer} key={option}>\n                                <RadioButton\n                                    color=\"#007BFF\"\n                                    value={option} />\n                                <Text>{option}</Text>\n                            </View>\n                        ))}\n                    </RadioButton.Group>\n                </Card.Content>\n                <Card.Actions style={styles.modalCardActions}>\n                    <Button onPress={handleCancelEdit} textColor='black'>\n                        Cancel\n                    </Button>\n                    <Button onPress={handleSaveEdit} buttonColor=\"#007BFF\" disabled={isLoading}>\n                        {isLoading ? 'Saving...' : 'Save'}\n                    </Button>\n                </Card.Actions>\n            </Card>\n        </Modal>\n    );\n\n    const handleRefresh = () => {\n        fetchOrders();\n    };\n\n    const renderEmptyList = () => (\n        <View style={styles.emptyListContainer}>\n            <Text style={styles.emptyListText}>No data available.</Text>\n        </View>\n    );\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.filterContainer}>\n                <View style={styles.pickerContainer}>\n                    <Picker\n                        selectedValue={statusFilter}\n                        onValueChange={(itemValue) => setStatusFilter(itemValue)}\n                        style={styles.picker}\n                    >\n                        {['All', ...statusOptions].map((item, index) => (<Picker.Item key={index} label={item} value={item} />))}\n                    </Picker>\n                </View>\n                <TextInput\n                    label=\"Search Orders\"\n                    value={searchQuery}\n                    onChangeText={setSearchQuery}\n                    style={styles.searchInput}\n                />\n                <Button onPress={handleClearSearch} textColor='#007BFF'>\n                    Clear\n                </Button>\n            </View>\n            {isLoading ? (\n                <ActivityIndicator size=\"large\" color=\"#007BFF\" style={styles.loader} />\n            ) : (\n                <FlatList\n                    data={filteredOrders}\n                    renderItem={renderOrderCard}\n                    keyExtractor={(item) => item._id}\n                    contentContainerStyle={styles.flatListContent}\n                    refreshControl={\n                        <RefreshControl\n                            refreshing={isRefreshing}\n                            onRefresh={handleRefresh}\n                            colors={['#007BFF']}\n                            progressBackgroundColor=\"#fff\"\n                        />\n                    }\n                    ListEmptyComponent={renderEmptyList}\n                />\n            )}\n\n            <Portal>\n                {renderEditModal()}\n            </Portal>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 16,\n        backgroundColor: '#f9f9f9',\n    },\n    filterContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 16,\n    },\n    pickerContainer: {\n        flex: 1,\n        borderWidth: 1,\n        borderColor: '#007BFF',\n        borderRadius: 4,\n        overflow: 'hidden',\n    },\n    picker: {\n        height: 40,\n        backgroundColor: '#fff',\n    },\n    searchInput: {\n        flex: 1,\n        marginRight: 8,\n        backgroundColor: '#fff',\n    },\n    flatListContent: {\n        paddingBottom: 80, // To accommodate the modal\n    },\n    card: {\n        marginBottom: 16,\n        borderRadius: 8,\n        elevation: 4, // Add elevation for shadow effect\n        backgroundColor: '#fff', // Add a background color for the card\n    },\n    detailsContainer: {\n        marginTop: 12,\n    },\n    detailRow: {\n        flexDirection: 'row',\n        marginBottom: 8,\n    },\n    detailLabel: {\n        flex: 1,\n        fontWeight: 'bold',\n    },\n    detailValue: {\n        flex: 2,\n    },\n    cardActions: {\n        justifyContent: 'flex-end',\n        marginTop: 16,\n    },\n    modalCard: {\n        margin: 16,\n        backgroundColor: '#fff',\n        padding: 16,\n        borderRadius: 8,\n    },\n    modalCardActions: {\n        justifyContent: 'flex-end',\n        marginTop: 16,\n    },\n    loader: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    radioButtonContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 8,\n    },\n    modalCardContent: {\n        paddingTop: 8,\n    },\n    emptyListContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    emptyListText: {\n        fontSize: 16,\n        fontWeight: 'bold',\n        color: 'gray',\n    },\n});\n\nexport default ManageOrdersScreen;\n","import React, { useState, useEffect } from 'react';\nimport { View, Text, FlatList, TouchableOpacity, StyleSheet, TextInput, ActivityIndicator } from 'react-native';\nimport { TextInput as PaperTextInput } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { Modal, Portal, Button, Provider, Card } from 'react-native-paper';\nimport api from '../api';\n\nconst DEFAULT_EDITED_PRODUCT = {\n    name: '',\n    description: '',\n    price: 0,\n    quantity: 0,\n};\n\nconst ManageProductScreen = () => {\n    const [products, setProducts] = useState([]);\n    const [filteredProducts, setFilteredProducts] = useState([]);\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [editedProduct, setEditedProduct] = useState(DEFAULT_EDITED_PRODUCT);\n    const [searchQuery, setSearchQuery] = useState('');\n    const [isEditing, setIsEditing] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isDeleteAlertVisible, setIsDeleteAlertVisible] = useState(false);\n    const [deleteProductId, setDeleteProductId] = useState(null);\n\n    useEffect(() => {\n        // Fetch all products from the backend API\n        fetchProducts();\n    }, []);\n\n    useEffect(() => {\n        // Filter products based on the search query\n        if (searchQuery.trim() === '') {\n            setFilteredProducts(products);\n        } else {\n            const filtered = products.filter((product) =>\n                product.name.toLowerCase().includes(searchQuery.toLowerCase())\n            );\n            setFilteredProducts(filtered);\n        }\n    }, [searchQuery, products]);\n\n    const fetchProducts = async () => {\n        try {\n            const response = await api.get('/products');\n            setProducts(response.data);\n            setFilteredProducts(response.data);\n        } catch (error) {\n            console.error('Error fetching products:', error);\n        }\n    };\n\n    const handleCreateProduct = () => {\n        // Clear the editedProduct state and open the modal for creating a new product\n        setEditedProduct(DEFAULT_EDITED_PRODUCT);\n        setIsEditing(false);\n        setIsModalVisible(true);\n    };\n\n    const handleEditProduct = (product) => {\n        setEditedProduct(product);\n        setIsEditing(true);\n        setIsModalVisible(true);\n    };\n\n    const handleCloseModal = () => {\n        setEditedProduct(DEFAULT_EDITED_PRODUCT);\n        setIsModalVisible(false);\n    };\n\n    const handleDeleteProduct = async (productId) => {\n        try {\n            await api.delete(`/products/${productId}`);\n            // Refresh the products list after successful deletion\n            fetchProducts();\n        } catch (error) {\n            console.error('Error deleting product:', error);\n        }\n    };\n\n    const handleRefresh = async () => {\n        // Show the loader during the refresh\n        setIsLoading(true);\n        try {\n            // Fetch all products from the backend API\n            await fetchProducts();\n        } catch (error) {\n            console.error('Error fetching products:', error);\n        } finally {\n            // Hide the loader after the refresh\n            setIsLoading(false);\n        }\n    };\n\n    const handleSaveProduct = async () => {\n        const request = {\n            description: editedProduct.description,\n            imageUrl: editedProduct.imageUrl,\n            name: editedProduct.name,\n            price: editedProduct.price,\n            quantity: editedProduct.quantity,\n        };\n\n        try {\n            setIsLoading(true);\n            if (isEditing) {\n                // Make an API request to update the product for edit operation\n                await api.put(`/products/${editedProduct._id}`, request);\n            } else {\n                // Make an API request to create a new product for create operation\n                await api.post('/products', request);\n            }\n            // Refresh the products list after successful update\n            fetchProducts();\n            setIsModalVisible(false);\n            setIsEditing(false);\n        } catch (error) {\n            console.error('Error saving product:', error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleClearSearch = () => {\n        setSearchQuery('');\n    };\n\n    const handleShowDeleteAlert = (productId) => {\n        setIsDeleteAlertVisible(true);\n        setDeleteProductId(productId);\n    };\n\n    const handleHideDeleteAlert = () => {\n        setIsDeleteAlertVisible(false);\n        setDeleteProductId(null);\n    };\n\n    const handleConfirmDelete = async () => {\n        // Close the delete alert modal\n        handleHideDeleteAlert();\n\n        // Delete the product\n        if (deleteProductId) {\n            try {\n                setIsLoading(true);\n                await handleDeleteProduct(deleteProductId);\n            } catch (error) {\n                console.error('Error deleting product:', error);\n            } finally {\n                setIsLoading(false);\n            }\n        }\n    };\n\n    const renderProductItem = ({ item }) => {\n        return (\n            <Card style={styles.productCard}>\n                <Card.Cover source={{ uri: item.imageUrl }} style={styles.productImage} />\n                <Card.Content>\n                    <Text style={styles.productName}>{item.name}</Text>\n                    <Text style={styles.productDescription}>{item.description}</Text>\n                </Card.Content>\n                <Card.Actions style={styles.productActions}>\n                    <View style={styles.buttonsContainer}>\n                        <TouchableOpacity style={styles.editButton} onPress={() => handleEditProduct(item)}>\n                            <Text style={styles.editButtonText}>Edit</Text>\n                        </TouchableOpacity>\n                        <TouchableOpacity style={styles.deleteButton} onPress={() => handleShowDeleteAlert(item._id)}>\n                            <Text style={styles.deleteButtonText}>Delete</Text>\n                        </TouchableOpacity>\n                    </View>\n                </Card.Actions>\n            </Card>\n        );\n    };\n\n    const renderEmptyList = () => {\n        return (\n            <View style={styles.emptyListContainer}>\n                <Text style={styles.emptyListText}>No data available.</Text>\n            </View>\n        );\n    };\n\n    return (\n        <Provider>\n            <View style={styles.container}>\n                <View style={styles.searchContainer}>\n                    <TextInput\n                        style={styles.searchInput}\n                        placeholder=\"Search products...\"\n                        value={searchQuery}\n                        onChangeText={setSearchQuery}\n                    />\n                    {searchQuery !== '' && (\n                        <TouchableOpacity style={styles.clearButton} onPress={handleClearSearch}>\n                            <MaterialCommunityIcons name=\"close-circle-outline\" size={20} color=\"#888\" />\n                        </TouchableOpacity>\n                    )}\n                </View>\n                {isLoading ? (\n                    <ActivityIndicator size=\"large\" color=\"#007BFF\" style={styles.loader} />\n                ) : (\n                    <FlatList\n                        data={filteredProducts}\n                        renderItem={renderProductItem}\n                        keyExtractor={(item) => item._id}\n                        contentContainerStyle={styles.listContainer}\n                        refreshing={isLoading}\n                        onRefresh={handleRefresh}\n                        ListEmptyComponent={renderEmptyList}\n                    />\n                )}\n                <Button mode=\"contained\" onPress={handleCreateProduct} style={styles.addButton}>\n                    Add Product\n                </Button>\n\n                {/* Delete Product Alert Modal */}\n                <Portal>\n                    <Modal visible={isDeleteAlertVisible} onDismiss={handleHideDeleteAlert} contentContainerStyle={styles.modalContainer}>\n                        <View style={styles.modalContent}>\n                            <Text style={styles.deleteAlertText}>Are you sure you want to delete this product?</Text>\n                            <View style={styles.modalFoter}>\n                                <Button mode=\"contained\" onPress={handleHideDeleteAlert} style={styles.cancelButton}>\n                                    Cancel\n                                </Button>\n                                <Button mode=\"contained\" onPress={handleConfirmDelete} style={styles.deleteButton}>\n                                    Done\n                                </Button>\n                            </View>\n                        </View>\n                    </Modal>\n                </Portal>\n\n                {/* Save/Edit Product Modal */}\n                <Portal>\n                    <Modal visible={isModalVisible} onDismiss={handleCloseModal} contentContainerStyle={styles.modalContainer}>\n                        <View style={styles.modalContent}>\n                            <PaperTextInput\n                                label=\"Product Image URL\"\n                                placeholder=\"Enter Product Image URL\"\n                                value={editedProduct.imageUrl}\n                                onChangeText={(text) => setEditedProduct({ ...editedProduct, imageUrl: text })}\n                                style={styles.input}\n                            />\n                            <PaperTextInput\n                                label=\"Product Name\"\n                                placeholder=\"Enter Product Name\"\n                                value={editedProduct.name}\n                                onChangeText={(text) => setEditedProduct({ ...editedProduct, name: text })}\n                                style={styles.input}\n                            />\n                            <PaperTextInput\n                                label=\"Product Description\"\n                                placeholder=\"Enter Product Description\"\n                                value={editedProduct.description}\n                                onChangeText={(text) => setEditedProduct({ ...editedProduct, description: text })}\n                                style={styles.input}\n                                multiline\n                            />\n                            <PaperTextInput\n                                label=\"Product Price\"\n                                placeholder=\"Enter Product Price\"\n                                value={(editedProduct.price === 0 || isNaN(editedProduct.price)) ? '' : editedProduct.price.toString()}\n                                onChangeText={(text) => setEditedProduct({ ...editedProduct, price: parseFloat(text) })}\n                                style={styles.input}\n                                keyboardType=\"numeric\"\n                            />\n                            <PaperTextInput\n                                label=\"Product Quantity\"\n                                placeholder=\"Enter Product Quantity\"\n                                value={(editedProduct.quantity === 0 || isNaN(editedProduct.quantity)) ? '' : editedProduct.quantity.toString()}\n                                onChangeText={(text) => setEditedProduct({ ...editedProduct, quantity: parseFloat(text) })}\n                                style={styles.input}\n                                keyboardType=\"numeric\"\n                            />\n                            <View style={styles.modalFoter}>\n                                <Button mode=\"contained\" onPress={handleCloseModal} textColor='black' style={styles.closeButton}>\n                                    Close\n                                </Button>\n                                <Button mode=\"contained\" onPress={handleSaveProduct} style={styles.saveButton}>\n                                    Save\n                                </Button>\n                            </View>\n                            {isLoading && <ActivityIndicator size=\"large\" color=\"#007BFF\" style={styles.loader} />}\n                        </View>\n                    </Modal>\n                </Portal>\n            </View>\n        </Provider>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 10,\n        backgroundColor: '#f9f9f9',\n    },\n    searchContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 10,\n    },\n    searchInput: {\n        flex: 1,\n        height: 40,\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 8,\n        paddingHorizontal: 10,\n    },\n    clearButton: {\n        padding: 8,\n    },\n    listContainer: {\n        paddingBottom: 20,\n    },\n    productCard: {\n        marginVertical: 5,\n        marginHorizontal: 10,\n        padding: 15,\n    },\n    productName: {\n        fontSize: 18,\n        fontWeight: 'bold',\n    },\n    productDescription: {\n        fontSize: 14,\n        color: '#888',\n        marginTop: 5,\n    },\n    modalContainer: {\n        backgroundColor: 'white',\n        padding: 20,\n        borderRadius: 8,\n    },\n    modalContent: {\n        paddingHorizontal: 10,\n    },\n    input: {\n        marginBottom: 10,\n        backgroundColor: '#f0f0f0',\n        borderRadius: 8,\n        borderWidth: 1,\n        borderColor: '#ccc',\n    },\n    saveButton: {\n        marginTop: 10,\n        backgroundColor: '#007BFF',\n        borderRadius: 8,\n    },\n    closeButton: {\n        marginTop: 10,\n        backgroundColor: 'white',\n        borderRadius: 8,\n        borderWidth: 1,\n        borderColor: 'black',\n    },\n    editButton: {\n        backgroundColor: '#007BFF',\n        paddingVertical: 6,\n        paddingHorizontal: 12,\n        borderRadius: 4,\n        marginRight: 8,\n    },\n    editButtonText: {\n        color: '#fff',\n        fontSize: 14,\n        fontWeight: 'bold',\n    },\n    deleteButton: {\n        backgroundColor: 'red',\n        paddingVertical: 6,\n        paddingHorizontal: 12,\n        borderRadius: 4,\n    },\n    deleteButtonText: {\n        color: '#fff',\n        fontSize: 14,\n        fontWeight: 'bold',\n    },\n    productActions: {\n        borderTopWidth: 1,\n        borderTopColor: '#eee',\n        marginTop: 12,\n        paddingTop: 8,\n    },\n    buttonsContainer: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n    },\n    addButton: {\n        backgroundColor: '#007BFF',\n        marginVertical: 10,\n        borderRadius: 8,\n    },\n    loader: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: [{ translateX: -25 }, { translateY: -25 }],\n        zIndex: 1,\n    },\n    emptyListContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: 20,\n    },\n    emptyListText: {\n        fontSize: 18,\n        color: '#888',\n    },\n});\n\nexport default ManageProductScreen;\n","// Frontend: src/screens/RegisterScreen.js\nimport React, { useState } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport api from '../api';\n\nconst RegisterScreen = ({ navigation }) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const handleRegister = async () => {\n        try {\n            await api.post('/admin/register', { email, password }).then(response => {\n                if (response) {\n                    navigation.navigate('Login');\n                }\n            });\n\n        } catch (error) {\n            console.error('Error registering:', error);\n            alert('Failed to register. Please check your details and try again.');\n        }\n    };\n\n    const handleNavigateToLogin = () => {\n        navigation.navigate('Login');\n    };\n\n    return (\n        <View style={styles.container}>\n            <MaterialCommunityIcons name=\"account-circle\" size={100} color=\"#007BFF\" />\n            <Text style={styles.heading}>Admin Registration</Text>\n            <TextInput\n                style={styles.input}\n                placeholder=\"Email\"\n                value={email}\n                onChangeText={setEmail}\n                autoCapitalize=\"none\"\n            />\n            <TextInput\n                style={styles.input}\n                placeholder=\"Password\"\n                value={password}\n                onChangeText={setPassword}\n                secureTextEntry\n            />\n            <TextInput\n                style={styles.input}\n                placeholder=\"Confirm Password\"\n                value={confirmPassword}\n                onChangeText={setConfirmPassword}\n                secureTextEntry\n            />\n            <TouchableOpacity style={styles.registerButton} onPress={handleRegister}>\n                <Text style={styles.registerButtonText}>Register</Text>\n            </TouchableOpacity>\n            {/* <TouchableOpacity style={styles.loginLink} onPress={handleNavigateToLogin}>\n                <Text style={styles.loginLinkText}>Already have an account? Login here.</Text>\n            </TouchableOpacity> */}\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: 20,\n        backgroundColor: '#f9f9f9',\n    },\n    heading: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        marginBottom: 20,\n        color: '#007BFF',\n    },\n    input: {\n        width: '100%',\n        height: 40,\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 8,\n        paddingHorizontal: 10,\n        marginBottom: 20,\n    },\n    registerButton: {\n        backgroundColor: '#007BFF',\n        paddingVertical: 12,\n        paddingHorizontal: 24,\n        borderRadius: 8,\n    },\n    registerButtonText: {\n        color: '#fff',\n        fontSize: 18,\n        fontWeight: 'bold',\n        textAlign: 'center',\n    },\n    loginLink: {\n        marginTop: 10,\n    },\n    loginLinkText: {\n        color: '#007BFF',\n        fontSize: 16,\n        fontWeight: 'bold',\n    },\n});\n\nexport default RegisterScreen;\n","import React, { useState, useEffect } from 'react';\nimport { View, Text, ScrollView, RefreshControl, Button } from 'react-native';\nimport Collapsible from 'react-native-collapsible';\nimport Slider from '@react-native-community/slider';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport default function UserDetailsScreen() {\n\n    const [users, setUsers] = useState([]);\n    const [refreshing, setRefreshing] = useState(false);\n    const [activeSections, setActiveSections] = useState([]);\n    const [coinFilter, setCoinFilter] = useState(-1);\n\n    const applyCoinFilter = (coinValue) => {\n        setCoinFilter(coinValue);\n    };\n    const toggleExpand = (index) => {\n        setActiveSections(activeSections.includes(index)\n            ? activeSections.filter(i => i !== index)\n            : [...activeSections, index]);\n    };\n    const fetchUsers = async () => {\n        setRefreshing(true);\n        try {\n            const response = await fetch('https://odicult.fruitnasta.com/api/user/getAllUsers');\n            const data = await response.json();\n            setUsers(data);\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setRefreshing(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchUsers();\n    }, []);\n\n    const handleLogout = async () => {\n        try {\n            await AsyncStorage.removeItem('userCredentials');\n            navigation.navigate('Login'); // Assuming 'Login' is the name of your login screen\n        } catch (error) {\n            console.error('Error clearing user credentials', error);\n        }\n    };\n\n    const renderUserDetails = () => {\n        return users\n            .filter(user => {\n                if (coinFilter === -1) return true; // Show all users\n                if (coinFilter === 4) return user.coins > 3; // More than 3 coins\n                return user.coins === coinFilter;\n            })\n            .map((user, index) => (\n                <View key={index} style={styles.userCard}>\n                    <Text onPress={() => toggleExpand(index)} style={styles.cardTitle}>\n                        {user.name || 'User'} {/* Fallback to 'User' if name is not available */}\n                    </Text>\n                    <Collapsible collapsed={!activeSections.includes(index)}>\n                        {Object.keys(user).map((key, idx) => {\n                            if (key !== 'name') { // Exclude the name from the details\n                                return (\n                                    <Text key={idx} style={styles.userDetail}>\n                                        {`${key.charAt(0).toUpperCase() + key.slice(1)}: ${user[key]}`}\n                                    </Text>\n                                );\n                            }\n                        })}\n                    </Collapsible>\n                </View>\n            ));\n    };\n\n\n    return (\n        <View style={styles.container}>\n            {/* <Button title=\"Logout\" onPress={handleLogout} style={styles.logoutButton} /> */}\n\n            <Text style={styles.userCount}>User Count: {users.length}</Text>\n            <View style={styles.sliderContainer}>\n                <Slider\n                    style={styles.slider}\n                    minimumValue={-1}\n                    maximumValue={4}\n                    step={1}\n                    value={coinFilter}\n                    onValueChange={applyCoinFilter}\n                />\n                <Text style={styles.sliderValue}>\n                    Filter by Coins: {coinFilter === -1 ? 'All' : (coinFilter === 4 ? 'More than 3' : coinFilter)}\n                </Text>\n            </View>\n\n            <ScrollView\n                style={styles.scrollView}\n                contentContainerStyle={styles.scrollViewContent}\n                refreshControl={\n                    <RefreshControl\n                        refreshing={refreshing}\n                        onRefresh={fetchUsers}\n                    />\n                }\n            >\n                {renderUserDetails()}\n            </ScrollView>\n        </View>\n    );\n\n\n}\n\n\nconst styles = {\n    userCard: {\n        margin: 10,\n        padding: 20,\n        backgroundColor: 'white',\n        borderRadius: 10,\n        elevation: 3,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 2,\n        width: '90%', // Adjust width as needed\n        alignSelf: 'center',\n    },\n    userDetail: {\n        fontSize: 16,\n        marginVertical: 4,\n        color: '#333', // Subtle text color for better readability\n        // Add more styling as needed\n    },\n    userCount: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        margin: 10,\n        color: '#444',\n    },\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'flex-start', // Align content to the top\n        paddingTop: 20, // Add padding at the top of the screen\n    },\n    scrollView: {\n        width: '100%',\n    },\n    scrollViewContent: {\n        alignItems: 'center',\n        paddingBottom: 20, // Add padding at the bottom for better scroll experience\n    },\n    cardTitle: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginBottom: 10,\n        color: '#007bff', // Example color for interactivity\n        // Add more styling as needed\n    },\n    logoutButton: {\n        marginTop: 20,\n        backgroundColor: '#ff4444', // Example: red color for logout\n        color: 'white',\n        padding: 10,\n        borderRadius: 10,\n        width: '80%',\n        alignSelf: 'center',\n        // More styling as needed\n    },\n    sliderContainer: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%',\n        padding: 20,\n    },\n    slider: {\n        width: '80%',\n        height: 40,\n    },\n    sliderValue: {\n        fontSize: 16,\n        marginTop: 10,\n        color: '#000',\n        // Add more styling if needed\n    },\n};\n\n","import React from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\n\nconst MenuScreen = ({ navigation }) => {\n    const screens = [\n        { name: 'Manage Product', route: 'Manage Product' },\n        { name: 'Manage Orders', route: 'Manage Orders' },\n        { name: 'Manage User', route: 'Manage User' },\n        { name: 'Register User', route: 'Register User' },\n    ];\n\n    return (\n        <View style={styles.container}>\n            {screens.map((screen, index) => (\n                <TouchableOpacity\n                    key={index}\n                    style={styles.card}\n                    onPress={() => navigation.navigate(screen.route)}\n                >\n                    <Text style={styles.text}>{screen.name}</Text>\n                </TouchableOpacity>\n            ))}\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    card: {\n        backgroundColor: '#e0e0e0',\n        padding: 20,\n        marginVertical: 10,\n        width: '80%',\n        alignItems: 'center',\n    },\n    text: {\n        fontSize: 18,\n    },\n});\n\nexport default MenuScreen;\n","import * as React from 'react';\nimport 'react-native-gesture-handler';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport ManageOrdersScreen from './ManageOrdersScreen';\nimport ManageProductScreen from './ManageProductScreen';\nimport RegisterScreen from './RegisterScreen';\nimport UserDetailsScreen from './UserDetailsScreen';\nimport MenuScreen from './MenuScreen';\n\nconst Stack = createStackNavigator();\n\nfunction HomeScreen() {\n    return (\n        <Stack.Navigator initialRouteName=\"Menu\">\n            <Stack.Screen\n                name=\"Menu\"\n                component={MenuScreen}\n                options={{ title: 'Menu' }}\n            />\n            <Stack.Screen\n                name=\"Manage User\"\n                component={UserDetailsScreen}\n                options={{ title: 'Manage User' }}\n            />\n            <Stack.Screen\n                name=\"Manage Product\"\n                component={ManageProductScreen}\n                options={{ title: 'Manage Product' }}\n            />\n            <Stack.Screen\n                name=\"Manage Orders\"\n                component={ManageOrdersScreen}\n                options={{ title: 'Manage Orders' }}\n            />\n            <Stack.Screen\n                name=\"Register User\"\n                component={RegisterScreen}\n                options={{ title: 'Register User' }}\n            />\n        </Stack.Navigator>\n    );\n}\n\nexport default HomeScreen;\n","import React, { useState, useEffect } from 'react';\nimport { View, Text, FlatList, StyleSheet, TouchableOpacity, Alert, ActivityIndicator, TextInput as RNTextInput } from 'react-native';\nimport { Button, Card, Title, Modal, Portal, Provider, TextInput } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport api from '../api';\n\nconst DEFAULT_EDITED_USER = {\n    email: '',\n    password: '',\n};\n\nconst ManageUserScreen = () => {\n    const [users, setUsers] = useState([]);\n    const [filteredUsers, setFilteredUsers] = useState([]);\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [editedUser, setEditedUser] = useState(DEFAULT_EDITED_USER);\n    const [isLoading, setIsLoading] = useState(false);\n    const [searchQuery, setSearchQuery] = useState('');\n\n    useEffect(() => {\n        // Fetch all users from the backend API\n        fetchUsers();\n    }, []);\n\n    useEffect(() => {\n        // Set filtered users to all users initially\n        setFilteredUsers(users);\n    }, [users]);\n\n    useEffect(() => {\n        // Filter users based on the search query\n        if (searchQuery.trim() === '') {\n            setFilteredUsers(users);\n        } else {\n            const filtered = users.filter((user) =>\n                user.email.toLowerCase().includes(searchQuery.toLowerCase())\n            );\n            setFilteredUsers(filtered);\n        }\n    }, [searchQuery, users]);\n\n    const fetchUsers = async () => {\n        setIsLoading(true)\n        try {\n            await api.get('/allUsers').then(response => {\n                if (response) {\n                    setUsers(response.data);\n                    setIsLoading(false)\n                }\n            });\n\n        } catch (error) {\n            console.error('Error fetching users:', error);\n            setIsLoading(false)\n        } finally {\n            setIsLoading(false)\n        }\n    };\n\n    const handleEditUser = (user) => {\n        setEditedUser(user);\n        setIsModalVisible(true);\n    };\n\n    const handleDeleteUser = async (userId) => {\n        try {\n            Alert.alert(\n                'Confirm Delete',\n                'Are you sure you want to delete this user?',\n                [\n                    { text: 'Cancel', style: 'cancel' },\n                    { text: 'Delete', style: 'destructive', onPress: () => deleteUser(userId) },\n                ],\n            );\n        } catch (error) {\n            console.error('Error deleting user:', error);\n        }\n    };\n\n    const deleteUser = async (userId) => {\n        setIsLoading(true);\n        try {\n            await api.delete(`/users/${userId}`).then(response => {\n                if (response) {\n                    fetchUsers();\n                }\n                else {\n                    setIsLoading(false);\n                }\n            });\n            // Refresh the users list after successful deletion\n\n        } catch (error) {\n            console.error('Error deleting user:', error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleRefresh = async () => {\n        // Show the loader during the refresh\n        setIsLoading(true);\n        try {\n            // Fetch all users from the backend API\n            await fetchUsers();\n        } catch (error) {\n            console.error('Error fetching users:', error);\n        } finally {\n            // Hide the loader after the refresh\n            setIsLoading(false);\n        }\n    };\n\n    const handleCloseModal = () => {\n        setEditedUser(DEFAULT_EDITED_USER);\n        setIsModalVisible(false);\n    };\n\n    const handleSaveUser = async () => {\n        const request = {\n            email: editedUser.email,\n            password: editedUser.password,\n        };\n\n        try {\n            setIsLoading(true);\n            await api.put(`/users/${editedUser._id}`, request).then(response => {\n                if (response) {\n                    fetchUsers();\n                    setIsModalVisible(false);\n                }\n            });\n            // Refresh the users list after successful update\n\n        } catch (error) {\n            console.error('Error saving user:', error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleClearSearch = () => {\n        setSearchQuery('');\n    };\n\n    const renderUserCard = ({ item }) => (\n        <Card style={styles.card}>\n            <Card.Content>\n                <Title style={styles.cardTitle}>ID: {item._id}</Title>\n                <Text style={styles.cardText}>Email: {item.email}</Text>\n            </Card.Content>\n            <Card.Actions style={styles.cardActions}>\n                <Button onPress={() => handleEditUser(item)} mode=\"contained\" style={styles.editButton}>\n                    Edit\n                </Button>\n                <Button onPress={() => handleDeleteUser(item._id)} mode=\"contained\" color=\"red\" style={styles.deleteButton}>\n                    Delete\n                </Button>\n            </Card.Actions>\n        </Card>\n    );\n\n    return (\n        <Provider>\n            <View style={styles.container}>\n                <View style={styles.searchContainer}>\n                    <RNTextInput\n                        placeholder=\"Search by Email\"\n                        value={searchQuery}\n                        onChangeText={setSearchQuery}\n                        style={styles.searchInput}\n                    />\n                    {searchQuery !== '' && (\n                        <TouchableOpacity style={styles.clearButton} onPress={handleClearSearch}>\n                            <MaterialCommunityIcons name=\"close-circle-outline\" size={20} color=\"#888\" />\n                        </TouchableOpacity>\n                    )}\n                </View>\n                {isLoading ? (\n                    <ActivityIndicator size=\"large\" color=\"#007BFF\" style={styles.loader} />\n                ) : (\n                    <FlatList\n                        data={filteredUsers}\n                        renderItem={renderUserCard}\n                        keyExtractor={(item) => item._id}\n                        contentContainerStyle={styles.flatListContent}\n                        refreshing={isLoading}\n                        onRefresh={handleRefresh}\n                    />\n                )}\n\n                <Portal>\n                    <Modal visible={isModalVisible} onDismiss={handleCloseModal} contentContainerStyle={styles.modalContainer}>\n                        <View style={styles.modalContent}>\n                            <Text style={styles.modalTitle}>Edit User</Text>\n                            <TextInput\n                                label=\"Email\"\n                                placeholder=\"Enter Email\"\n                                value={editedUser.email}\n                                onChangeText={(text) => setEditedUser({ ...editedUser, email: text })}\n                                style={styles.input}\n                            />\n                            <TextInput\n                                label=\"Password\"\n                                placeholder=\"Enter Password\"\n                                onChangeText={(text) => setEditedUser({ ...editedUser, password: text })}\n                                style={styles.input}\n                            />\n                            <View style={styles.modalFoter}>\n                                <Button mode=\"contained\" onPress={handleCloseModal} textColor='black' style={styles.cancelButton}>\n                                    Cancel\n                                </Button>\n                                <Button mode=\"contained\" onPress={handleSaveUser} style={styles.saveButton}>\n                                    Save\n                                </Button>\n                            </View>\n                            {isLoading && <ActivityIndicator size=\"large\" color=\"#007BFF\" style={styles.loader} />}\n                        </View>\n                    </Modal>\n                </Portal>\n            </View>\n        </Provider>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 10,\n        backgroundColor: '#f9f9f9',\n    },\n    flatListContent: {\n        paddingBottom: 20,\n    },\n    card: {\n        marginVertical: 5,\n        marginHorizontal: 10,\n        padding: 15,\n        borderRadius: 8,\n        elevation: 3,\n        backgroundColor: '#fff',\n    },\n    cardTitle: {\n        fontSize: 18,\n        fontWeight: 'bold',\n    },\n    cardText: {\n        fontSize: 16,\n        marginTop: 5,\n    },\n    cardActions: {\n        borderTopWidth: 1,\n        borderTopColor: '#eee',\n        marginTop: 12,\n        paddingTop: 8,\n        justifyContent: 'flex-end',\n    },\n    editButton: {\n        backgroundColor: '#007BFF',\n        paddingVertical: 6,\n        paddingHorizontal: 12,\n        borderRadius: 4,\n        marginRight: 8,\n    },\n    deleteButton: {\n        backgroundColor: 'red',\n        paddingVertical: 6,\n        paddingHorizontal: 12,\n        borderRadius: 4,\n    },\n    modalContainer: {\n        backgroundColor: 'white',\n        padding: 20,\n        borderRadius: 8,\n    },\n    modalContent: {\n        paddingHorizontal: 10,\n    },\n    modalTitle: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginBottom: 10,\n    },\n    input: {\n        marginBottom: 10,\n        backgroundColor: '#f0f0f0',\n        borderRadius: 8,\n        borderWidth: 1,\n        borderColor: '#ccc',\n    },\n    modalFoter: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n        marginTop: 20,\n    },\n    cancelButton: {\n        marginRight: 10,\n        backgroundColor: 'white',\n        borderWidth: 1,\n        borderColor: '#ccc',\n\n    },\n    saveButton: {\n        backgroundColor: '#007BFF',\n        borderRadius: 8,\n    },\n    searchContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 10,\n    },\n    searchInput: {\n        flex: 1,\n        height: 40,\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 8,\n        paddingHorizontal: 10,\n    },\n    clearButton: {\n        padding: 8,\n    },\n    loader: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: [{ translateX: -25 }, { translateY: -25 }],\n        zIndex: 1,\n    },\n});\n\nexport default ManageUserScreen;\n","// App.js\nimport React, { useState, useEffect, useContext } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport SpinnerOverlay from 'react-native-loading-spinner-overlay';\nimport { HomeScreen, LoginScreen, RegisterScreen } from './screens';\nimport UserContext, { UserProvider } from './context/UserContext';\nimport { View } from 'react-native';\n\nconst Stack = createStackNavigator();\n\nconst App = () => {\n\n  const [isLoading, setIsLoading] = useState(false);\n  const { userId } = useContext(UserContext);\n  if (isLoading) {\n    return (\n      <View>\n        <SpinnerOverlay visible={isLoading} textContent={'Loading...'} textStyle={{ color: '#FFF' }} />\n      </View>\n    );\n  }\n  return (\n    <NavigationContainer>\n      {userId ? (\n        <Stack.Navigator initialRouteName=\"HomeScreen\">\n          <Stack.Screen name=\"HomeScreen\" component={HomeScreen} />\n        </Stack.Navigator>\n      ) : (\n        <Stack.Navigator initialRouteName=\"Login\" >\n          <Stack.Screen name=\"Login\" component={LoginScreen} />\n          <Stack.Screen name=\"Register\" component={RegisterScreen} />\n        </Stack.Navigator>\n      )}\n    </NavigationContainer>\n  );\n}\n\nexport default () => {\n  return (\n    <PaperProvider>\n      <UserProvider>\n        <App />\n      </UserProvider>\n    </PaperProvider>\n  );\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [62], () => (__webpack_require__(5530)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["UserContext","createContext","userId","login","logout","UserProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","setUserId","useEffect","loadUserIdFromStorage","_ref2","_asyncToGenerator","AsyncStorage","getItem","error","console","apply","arguments","_ref3","setItem","_x","_ref4","removeItem","_jsx","Provider","value","axios","create","baseURL","styles","StyleSheet","container","flex","justifyContent","alignItems","padding","backgroundColor","heading","fontSize","fontWeight","marginBottom","color","input","width","height","borderWidth","borderColor","borderRadius","paddingHorizontal","loginButton","paddingVertical","loginButtonText","textAlign","registerLink","marginTop","registerLinkText","navigation","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","isLoading","setIsLoading","useContext","handleLogin","api","post","then","response","token","data","alert","_jsxs","View","style","MaterialCommunityIcons","name","size","Text","TextInput","placeholder","onChangeText","autoCapitalize","secureTextEntry","TouchableOpacity","onPress","ActivityIndicator","navigate","filterContainer","flexDirection","pickerContainer","overflow","picker","searchInput","marginRight","flatListContent","paddingBottom","card","elevation","detailsContainer","detailRow","detailLabel","detailValue","cardActions","modalCard","margin","modalCardActions","loader","radioButtonContainer","modalCardContent","paddingTop","emptyListContainer","emptyListText","orders","setOrders","filteredOrders","setFilteredOrders","isModalVisible","setIsModalVisible","_useState7","_useState8","editedOrder","setEditedOrder","_useState9","_useState10","searchQuery","setSearchQuery","_useState11","_useState12","statusFilter","setStatusFilter","_useState13","_useState14","_useState15","_useState16","isRefreshing","setIsRefreshing","fetchOrders","result","get","reverse","applyFilters","query","status","filteredData","filter","order","trim","_id","toLowerCase","includes","handleCancelEdit","handleSaveEdit","put","handleDeleteOrder","Alert","text","deleteOrder","delete","_x2","statusOptions","Picker","selectedValue","onValueChange","itemValue","concat","map","item","index","Item","label","Button","textColor","FlatList","renderItem","_ref5","Card","Content","Title","totalPrice","toFixed","phone","paymentMode","Actions","buttonColor","keyExtractor","contentContainerStyle","refreshControl","RefreshControl","refreshing","onRefresh","colors","progressBackgroundColor","ListEmptyComponent","Portal","Modal","visible","onDismiss","title","RadioButton","Group","_objectSpread","option","disabled","DEFAULT_EDITED_PRODUCT","description","price","quantity","searchContainer","clearButton","listContainer","productCard","marginVertical","marginHorizontal","productName","productDescription","modalContainer","modalContent","saveButton","closeButton","editButton","editButtonText","deleteButton","deleteButtonText","productActions","borderTopWidth","borderTopColor","buttonsContainer","addButton","position","top","left","transform","translateX","translateY","zIndex","products","setProducts","filteredProducts","setFilteredProducts","editedProduct","setEditedProduct","isEditing","setIsEditing","isDeleteAlertVisible","setIsDeleteAlertVisible","_useState17","_useState18","deleteProductId","setDeleteProductId","fetchProducts","filtered","product","handleCloseModal","handleDeleteProduct","productId","handleRefresh","handleSaveProduct","request","imageUrl","handleHideDeleteAlert","handleConfirmDelete","_ref6","Cover","source","uri","productImage","mode","deleteAlertText","modalFoter","cancelButton","PaperTextInput","multiline","isNaN","toString","parseFloat","keyboardType","registerButton","registerButtonText","loginLink","loginLinkText","confirmPassword","setConfirmPassword","handleRegister","UserDetailsScreen","users","setUsers","setRefreshing","activeSections","setActiveSections","coinFilter","setCoinFilter","fetchUsers","fetch","json","userCount","length","sliderContainer","Slider","slider","minimumValue","maximumValue","step","coinValue","sliderValue","ScrollView","scrollView","scrollViewContent","user","coins","userCard","i","_toConsumableArray","toggleExpand","cardTitle","Collapsible","collapsed","Object","keys","key","idx","userDetail","charAt","toUpperCase","slice","shadowColor","shadowOffset","shadowOpacity","shadowRadius","alignSelf","logoutButton","route","screen","Stack","createStackNavigator","Navigator","initialRouteName","Screen","component","MenuScreen","options","ManageProductScreen","ManageOrdersScreen","RegisterScreen","cardText","modalTitle","App","SpinnerOverlay","textContent","textStyle","NavigationContainer","HomeScreen","LoginScreen","PaperProvider","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","id","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","this","ns","def","current","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","g","globalThis","Function","e","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}